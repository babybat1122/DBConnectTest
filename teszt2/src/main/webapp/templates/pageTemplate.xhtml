<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
      xmlns:pe="http://primefaces.org/ui/extensions"
      xmlns:fn="http://java.sun.com/jsp/jstl/functions"
      xmlns:bevfeld="http://java.sun.com/jsf/composite/bevfeld"
      >

    <h:head>

        <f:facet name="first">
            <meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1" />
            <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
            <link rel="shortcut icon" type="image/x-icon" href="#{request.contextPath}/resources/images/favicon.png" />
        </f:facet>

        <h:outputStylesheet library="webjars" name="font-awesome/6.1.0/css/all.min-jsf.css" />
        <h:outputScript library="webjars" name="font-awesome/6.1.0/js/all.min.js" />


        <h:outputStylesheet name="/css/bevfeld_relative.css"/>
        <h:outputStylesheet name="/css/cssLayout.css"/>

        <title>
            <ui:insert name="title">#{jsfFunctions.appName}</ui:insert>
        </title>

        <ui:insert name="html:head" />

        <script type="text/javascript">
            //<![CDATA[
            /**
             * Dialógust középre
             * @param {type} dialog
             * @returns {undefined}
             */
            function centerDialog(dialog) {
                $(dialog).css("top", Math.max(0, (($(window).height() - $(dialog).outerHeight()) / 2) + $(window).scrollTop()) + "px");
                $(dialog).css("left", Math.max(0, (($(window).width() - $(dialog).outerWidth()) / 2) + $(window).scrollLeft()) + "px");
            }

            /**
             * Validációs hiba és annank az esetleges üzenetének időzített eltüntetése
             *
             * @param {type} component jQuery komponens, pl.: '$(this)'
             * @returns {undefined}
             */
            function fadeoutValidatorMessageByJqObject(component) {

                if (component.length === 0) {
                    console.error('A komponens jQuery objektumot meg kell adni, pl.: fadeoutValidatorMessageByJqObject($(this));');
                    return;
                }

                //leszedjük a komponen ID-jét
                var componentId = component.attr('id');
                //console.log('Component ID: ' + component.attr('id'));

                //Ha van a komponensen 'ui-state-error' class (piros keret), akkor azt leszedjük
                if (component.hasClass('ui-state-error')) {
                    setTimeout(function () {

                        //leszedjük a hiba osztályt róla
                        component.removeClass('ui-state-error');
                        //Meg az összes gyerekéről
                        component.children('ui-state-error').each(function () {
                            $(this).removeClass('ui-state-error');
                        });
                    }, 1000);
                }

                //Megkeressük hogy van-e erre a komponensre <p:message> komponens, ami éppen hibát jelez ki
                var errorMessageComponent = $("[class*='ui-message-error'][data-target='" + componentId + "']");
                if (errorMessageComponent === undefined) {
                    return;
                }
                //Ha látható ez a hibakiíró komponens, akkor azt eltüntetjük
                if (errorMessageComponent.is(':visible')) {
                    setTimeout(function () {
                        errorMessageComponent.hide(1000);
                    }, 1000);
                }
            }
            /**
             * Validációs hiba és annank az esetleges üzenetének időzített eltüntetése
             *
             * @param {type} componentId komponens ID-je
             * @returns {undefined}
             */
            function fadeoutValidatorMessageById(componentId) {

                var component = $('#' + componentId);
                if (component.length === 0) {
                    console.error('A komponens ID-t meg kell adni, pl.: fadeoutValidatorMessageById("testBarkodInputText");');
                    return;
                }

                //Ha van a komponensen 'ui-state-error' class (piros keret), akkor azt leszedjük
                if (component.hasClass('ui-state-error') || component.hasClass('ui-calendar')) {
                    setTimeout(function () {

                        //leszedjük a hiba osztályt róla, ha van
                        if (component.hasClass('ui-state-error')) {
                            component.removeClass('ui-state-error');
                        }

                        //Meg az összes gyerekéről
                        component.children().each(function () {
                            if ($(this).hasClass('ui-state-error')) {
                                $(this).removeClass('ui-state-error');
                            }
                        });
                    }, 1000);
                }

                //Megkeressük hogy van-e erre a komponensre <p:message> komponens, ami éppen hibát jelez ki
                var errorMessageComponent = $("[class*='ui-message-error'][data-target='" + componentId + "']");
                if (errorMessageComponent.length === 0) {
                    return;
                }
                //Ha látható ez a hibakiíró komponens, akkor azt eltüntetjük
                if (errorMessageComponent.is(':visible')) {
                    setTimeout(function () {
                        errorMessageComponent.hide(1000);
                    }, 1000);
                }
            }

            //-----------------------------------------
            window.history.forward();
            function preventBack() {
                window.history.forward();
            }
            //]]>
        </script>
    </h:head>

    <h:body id="body" onload="preventBack()" >

        <!-- runtime konstansok -->
        <c:set var="initParamProjectStage" scope="request" value="#{initParam['javax.faces.PROJECT_STAGE']}" />
        <c:set var="isDeveloperMode" scope="request" value="#{'Development' eq initParamProjectStage}" />
        <c:set var="isTestMode" scope="request" value="#{('SystemTest' eq initParamProjectStage) or ('UnitTest' eq initParamProjectStage)}" />

        <!-- Adatbázis sík lekérdezése -->
        <p:importEnum type="hu.gov.nav.bef.commons.web.model.services.DataBaseFlatName" var="dataBaseFlatName" allSuffix="ALL_ENUM_VALUES"/>
        <c:set var="isOnProductDataBase" scope="request" value="#{dataBaseFlatName.PROD eq jsfFunctions.dataBaseFlatName}" />

        <c:set var="needShowToolTip" scope="request" value="#{sessionManager.showToolTip}" />
        <c:set var="isUserAdmin" scope="request" value="#{sessionManager.isUserAdmin()}" />
        <c:set var="isCallFromBevFeldMenu" scope="request" value="#{sessionManager.callFromBevFeldMenu}" />
        <c:set var="isRunningOnWebLogic" scope="request" value="#{fn:startsWith(request.servletContext.serverInfo, 'WebLogic')}" />

        <ui:debug hotkey="x" rendered="#{isDeveloperMode}" />

        <p:growl id="growl" widgetVar="growl" escape="false" life="15000" globalOnly="true" showDetail="true" showSummary="true">
            <p:autoUpdate />
        </p:growl>

        <div id="wrapper">
            <div id="top">
                <bevfeld:header id="commonHeader"
                                isCallFromBevFeldMenu="#{isCallFromBevFeldMenu}"
                                isDeveloperMode="#{isDeveloperMode}"
                                isTestMode="#{isTestMode}"
                                jsfFunctions="#{jsfFunctions}"
                                sessionManager="#{sessionManager}"
                                />
            </div>

            <div id="content" class="center_content">

                <div id="content">
                    <ui:insert name="content">
                        pageTemplate Content
                    </ui:insert>
                </div>
            </div>

            <div style="clear: both;">  <!-- hogy a lábléc a helyén maradjon a PF GridCSS használata esetén -->
                <div id="bottom">
                    <div id="footer">
                        <bevfeld:footer id="commonfooter"
                                        jsfFunctions="#{jsfFunctions}"
                                        isDeveloperMode="#{isDeveloperMode}"
                                        />
                    </div>
                </div>
            </div>
        </div>



        <pe:blockUI widgetVar="blockUI" cssOverlay="{opacity:0.2}" css="{margin: '4.5em auto', cursor: 'wait'}">
            <h:panelGrid columns="2">
                <h:graphicImage name="images/ajax-loader-bar.gif" style="margin-right: 1em; vertical-align: middle;"/>
                <h:outputText value="Kérem várjon..." style="white-space: nowrap;"/>
            </h:panelGrid>
        </pe:blockUI>

        <ui:include src="../dialogs/confirmationDlg.xhtml" />

        <f:facet name="last">
            <h:outputStylesheet library="css" name="growl-message-extender.css" />
        </f:facet>
    </h:body>
</html>
